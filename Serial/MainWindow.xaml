<Window x:Class="Serial.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Serial"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:rules="clr-namespace:Serial.ValidationRules"
        xmlns:behaviors="clr-namespace:Serial.Behaviors"
        mc:Ignorable="d"
        Title="串口助手" Height="450" Width="800"
        MinHeight="400" MinWidth="600"
        WindowStartupLocation="CenterScreen"
        DataContext="{x:Static local:ViewModel.Instance}">

    <Window.Resources>
        <Style x:Key="MainWindowDefaultButtonStyle" TargetType="Button">
            <Setter Property="Padding" Value="20,5"/>
        </Style>
        <Style TargetType="Button" BasedOn="{StaticResource MainWindowDefaultButtonStyle}">
        </Style>
    </Window.Resources>

    <DockPanel>
        <!--左侧边栏-->
        <ListBox DockPanel.Dock="Left" Width="150" Margin="10"
                 ItemsSource="{Binding SerialConnections}"
                 SelectedItem="{Binding SelectedSerialConnection}">
            <ListBox.ItemTemplate>
                <ItemContainerTemplate>
                    <StackPanel Orientation="Horizontal">
                        <Ellipse Width="10" Height="10" Margin="8">
                            <Ellipse.Style>
                                <Style TargetType="Ellipse">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsOpen}" Value="False">
                                            <Setter Property="Fill" Value="Gray"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsOpen}" Value="True">
                                            <Setter Property="Fill" Value="Green"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Ellipse.Style>
                        </Ellipse>
                        <TextBlock VerticalAlignment="Center">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Text" Value="{Binding SelectedSerialPortInfo.PortName}"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SelectedSerialPortInfo}" Value="{x:Null}">
                                            <Setter Property="Text" Value="[未选择]"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </StackPanel>
                </ItemContainerTemplate>
            </ListBox.ItemTemplate>
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem">
                    <Setter Property="ToolTip" Value="{Binding SelectedSerialPortInfo.Description}"/>
                </Style>
            </ListBox.ItemContainerStyle>
        </ListBox>

        <!--顶部按钮-->
        <StackPanel DockPanel.Dock="Top" Margin="0,10,10,10" Orientation="Horizontal">
            <Button Content="添加"
                    Command="{Binding AddSerialConnectionCmd}"/>
            <Button Content="移除" Margin="10,0,0,0"
                    Command="{Binding RemoveSerialConnectionCmd}"
                    CommandParameter="{Binding SelectedSerialConnection}"/>
        </StackPanel>

        <!--主要功能区-->
        <GroupBox Margin="0,0,10,10" DataContext="{Binding SelectedSerialConnection}">
            <GroupBox.Header>
                <TextBlock Text="{Binding SelectedSerialPortInfo}" TextTrimming="CharacterEllipsis"/>
            </GroupBox.Header>
            <GroupBox.Style>
                <Style TargetType="GroupBox">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsOpen}" Value="False">
                            <Setter Property="Content">
                                <Setter.Value>
                                    <!--串口未打开时的界面开始-->
                                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                                        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Width="250">
                                            <StackPanel.Resources>
                                                <Style TargetType="TextBox">
                                                    <Setter Property="Margin" Value="0,0,0,10"/>
                                                    <Setter Property="Padding" Value="2,5"/>
                                                </Style>
                                                <Style TargetType="ComboBox">
                                                    <Setter Property="Margin" Value="0,0,0,10"/>
                                                    <Setter Property="Padding" Value="5"/>
                                                </Style>
                                            </StackPanel.Resources>
                                            <TextBlock>串口名</TextBlock>
                                            <DockPanel>
                                                <Button DockPanel.Dock="Right" Margin="5,0,0,10" Padding="10,0"
                                                        Content="R" ToolTip="更新可用串口列表"
                                                        Command="{Binding Source={x:Static local:ViewModel.Instance}, Path=UpdateAvaliablePortsCmd}"/>
                                                <ComboBox ItemsSource="{Binding Source={x:Static local:ViewModel.Instance}, Path=AvaliablePorts}"
                                                          SelectedItem="{Binding SelectedSerialPortInfo}"
                                                          ToolTip="{Binding SelectedItem, RelativeSource={RelativeSource Self}}">
                                                    <ComboBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <TextBlock Text="{Binding}" TextTrimming="CharacterEllipsis"/>
                                                        </DataTemplate>
                                                    </ComboBox.ItemTemplate>
                                                </ComboBox>
                                            </DockPanel>
                                            <TextBlock>波特率</TextBlock>
                                            <ComboBox ItemsSource="{Binding Source={x:Static local:ViewModel.Instance}, Path=BraudRateList}"
                                                      IsEditable="True">
                                                <ComboBox.Text>
                                                    <Binding Path="BraudRate" UpdateSourceTrigger="PropertyChanged">
                                                        <Binding.ValidationRules>
                                                            <rules:BraudRateRule/>
                                                        </Binding.ValidationRules>
                                                    </Binding>
                                                </ComboBox.Text>
                                            </ComboBox>
                                            <TextBlock>数据位</TextBlock>
                                            <ComboBox ItemsSource="{Binding Source={x:Static local:ViewModel.Instance}, Path=DataBitsList}"
                                                      SelectedItem="{Binding DataBits, UpdateSourceTrigger=PropertyChanged}"/>
                                            <TextBlock>校验位</TextBlock>
                                            <ComboBox ItemsSource="{Binding Source={x:Static local:ViewModel.Instance}, Path=ParityList}"
                                                      SelectedItem="{Binding Parity, UpdateSourceTrigger=PropertyChanged}"/>
                                            <TextBlock>停止位</TextBlock>
                                            <ComboBox ItemsSource="{Binding Source={x:Static local:ViewModel.Instance}, Path=StopBitsList}"
                                                      SelectedItem="{Binding StopBits, UpdateSourceTrigger=PropertyChanged}"/>
                                            <Button Command="{Binding OpenCmd}" Margin="0,10,0,0">打开</Button>
                                        </StackPanel>
                                    </ScrollViewer>
                                    <!--串口未打开时的界面结束-->
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsOpen}" Value="True">
                            <Setter Property="Content">
                                <Setter.Value>
                                    <!--串口打开时的界面开始-->
                                    <DockPanel>
                                        <!--右侧菜单-->
                                        <Border DockPanel.Dock="Right" CornerRadius="5" Width="170" Background="#10000000">
                                            <!--<Border.Triggers>
                                                <EventTrigger RoutedEvent="MouseEnter">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Duration="0:0:0.15" To="180" Storyboard.TargetProperty="Width"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                                <EventTrigger RoutedEvent="MouseLeave">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Duration="0:0:0.15" Storyboard.TargetProperty="Width"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </Border.Triggers>-->
                                            <ScrollViewer VerticalScrollBarVisibility="Hidden">
                                                <StackPanel Margin="20,15">
                                                    <!--选项-->
                                                    <TextBlock FontSize="20" Margin="0,0,0,10">选项</TextBlock>
                                                    <DockPanel Margin="0,0,0,10" LastChildFill="False">
                                                        <TextBlock DockPanel.Dock="Left" Margin="0,0,5,0" VerticalAlignment="Center">字符集</TextBlock>
                                                        <ComboBox DockPanel.Dock="Right" SelectedItem="{Binding EncodingInfo}"
                                                                  ItemsSource="{Binding Source={x:Static local:ViewModel.Instance}, Path=EncodingInfoList}"
                                                                  ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=SelectedItem.DisplayName}">
                                                            <ComboBox.ItemTemplate>
                                                                <DataTemplate>
                                                                    <TextBlock Text="{Binding DisplayName}" TextTrimming="CharacterEllipsis"/>
                                                                </DataTemplate>
                                                            </ComboBox.ItemTemplate>
                                                        </ComboBox>
                                                    </DockPanel>
                                                    <Rectangle Margin="0,0,0,10" Height="1" Fill="#15000000"/>
                                                    <CheckBox Margin="0,0,0,10" IsChecked="{Binding PauseReceiving}">暂停接收</CheckBox>
                                                    <CheckBox Margin="0,0,0,10" IsChecked="{Binding ShowHexByDefault}">默认显示十六进制</CheckBox>
                                                    <Button Margin="0,0,0,10" Command="{Binding ClearDataCmd}">清空记录</Button>
                                                    <Button Command="{Binding CloseCmd}" Margin="0,0,0,10">关闭串口</Button>
                                                    <!--串口信息-->
                                                    <TextBlock FontSize="20" Margin="0,10,0,10">串口信息</TextBlock>
                                                    <TextBlock Margin="0,0,0,10">
                                                        串口名：<Run Text="{Binding PortName}"/><LineBreak/>
                                                        波特率：<Run Text="{Binding BraudRate}"/><LineBreak/>
                                                        数据位：<Run Text="{Binding DataBits}"/><LineBreak/>
                                                        校验位：<Run Text="{Binding Parity}"/><LineBreak/>
                                                        停止位：<Run Text="{Binding StopBits}"/><LineBreak/>
                                                        已接收：<Run Text="{Binding ReceivedDataByteCount, Mode=OneWay, StringFormat=\{0\} 字节}">
                                                            <Run.ToolTip>
                                                                <TextBlock>
                                                                    已接收 <Run Text="{Binding ReceivedDataCount, Mode=OneWay}"/> 条数据，共 <Run Text="{Binding ReceivedDataByteCount, Mode=OneWay}"/> 字节
                                                                </TextBlock>
                                                            </Run.ToolTip>
                                                        </Run>
                                                    </TextBlock>
                                                </StackPanel>
                                            </ScrollViewer>
                                        </Border>
                                        <!--数据区-->
                                        <Grid Margin="5">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <!--数据列表-->
                                            <ListBox Grid.Row="0" HorizontalContentAlignment="Stretch"
                                                     ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                                     ItemsSource="{Binding DataList}" SelectedItem="{Binding SelectedData}">
                                                <ListBox.Resources>
                                                    <DiscreteObjectKeyFrame x:Key="ListBoxBindingProxy" Value="{Binding}"/>
                                                </ListBox.Resources>
                                                <i:Interaction.Behaviors>
                                                    <behaviors:ListBoxScrollToBottom/>
                                                </i:Interaction.Behaviors>
                                                <ListBox.ItemContainerStyle>
                                                    <Style TargetType="ListBoxItem">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding IsSentData}" Value="True">
                                                                <!--发送出数据的信息-->
                                                                <Setter Property="ToolTip">
                                                                    <Setter.Value>
                                                                        <TextBlock>
                                                                            发送时间：<Run Text="{Binding Time, Mode=OneWay, StringFormat=yyyy/MM/dd HH:mm:ss}"/>
                                                                        </TextBlock>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <!--发送出数据的右键菜单-->
                                                                <Setter Property="ContextMenu">
                                                                    <Setter.Value>
                                                                        <ContextMenu>
                                                                            <MenuItem Header="删除" CommandParameter="{Binding}"
                                                                                      Command="{Binding Source={StaticResource ListBoxBindingProxy}, Path=Value.RemoveDataItemCmd}"/>
                                                                        </ContextMenu>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding IsSentData}" Value="False">
                                                                <!--接收到数据的信息-->
                                                                <Setter Property="ToolTip">
                                                                    <Setter.Value>
                                                                        <TextBlock>
                                                                            大小：<Run Text="{Binding Bytes.Length, Mode=OneWay}"/> 字节<LineBreak/>
                                                                            时间：<Run Text="{Binding Time, Mode=OneWay, StringFormat=yyyy/MM/dd HH:mm:ss}"/>
                                                                        </TextBlock>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <!--接收到数据的右键菜单-->
                                                                <Setter Property="ContextMenu">
                                                                    <Setter.Value>
                                                                        <ContextMenu>
                                                                            <MenuItem Header="导出数据" CommandParameter="{Binding}"
                                                                                      Command="{Binding Source={x:Static local:ViewModel.Instance}, Path=ExportSerialDataCmd}"/>
                                                                            <MenuItem Header="更换字符集" DisplayMemberPath="DisplayName"
                                                                                      ItemsSource="{Binding Source={x:Static local:ViewModel.Instance}, Path=EncodingInfoList}">
                                                                                <MenuItem.ItemContainerStyle>
                                                                                    <Style TargetType="MenuItem">
                                                                                        <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource AncestorType=MenuItem}, Path=DataContext.ChangeEncodingCmd}"/>
                                                                                        <Setter Property="CommandParameter" Value="{Binding}"/>
                                                                                    </Style>
                                                                                </MenuItem.ItemContainerStyle>
                                                                            </MenuItem>
                                                                            <Separator/>
                                                                            <MenuItem Header="删除" CommandParameter="{Binding}"
                                                                                      Command="{Binding Source={StaticResource ListBoxBindingProxy}, Path=Value.RemoveDataItemCmd}"/>
                                                                        </ContextMenu>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ListBox.ItemContainerStyle>
                                                <ListBox.ItemTemplate>
                                                    <DataTemplate DataType="{x:Type local:SerialData}">
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="Auto"/>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="Auto"/>
                                                            </Grid.ColumnDefinitions>
                                                            <StackPanel Grid.Column="0" Orientation="Horizontal">
                                                                <!--收/发图标-->
                                                                <Border Margin="10,0,0,0" CornerRadius="5" VerticalAlignment="Center">
                                                                    <Border.Style>
                                                                        <Style TargetType="Border">
                                                                            <Style.Triggers>
                                                                                <DataTrigger Binding="{Binding IsSentData}" Value="True">
                                                                                    <Setter Property="Background" Value="Gray"/>
                                                                                </DataTrigger>
                                                                                <DataTrigger Binding="{Binding IsSentData}" Value="False">
                                                                                    <Setter Property="Background" Value="Green"/>
                                                                                </DataTrigger>
                                                                            </Style.Triggers>
                                                                        </Style>
                                                                    </Border.Style>
                                                                    <TextBlock Foreground="White" Margin="4,2" FontSize="10">
                                                                        <TextBlock.Style>
                                                                            <Style TargetType="TextBlock">
                                                                                <Style.Triggers>
                                                                                    <DataTrigger Binding="{Binding IsSentData}" Value="True">
                                                                                        <Setter Property="Text" Value="发"/>
                                                                                    </DataTrigger>
                                                                                    <DataTrigger Binding="{Binding IsSentData}" Value="False">
                                                                                        <Setter Property="Text" Value="收"/>
                                                                                    </DataTrigger>
                                                                                </Style.Triggers>
                                                                            </Style>
                                                                        </TextBlock.Style>
                                                                    </TextBlock>
                                                                </Border>
                                                                <!--时间-->
                                                                <TextBlock Margin="10,0,0,0" FontSize="10" Foreground="Gray"
                                                                           VerticalAlignment="Center" Text="{Binding Time, StringFormat=HH:mm:ss}"/>
                                                            </StackPanel>
                                                            <!--数据-->
                                                            <TextBox Grid.Column="1" Margin="10" MaxHeight="150"
                                                                     BorderThickness="0" Background="Transparent"
                                                                     HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto"
                                                                     IsReadOnly="True" FontFamily="Consolas" Text="{Binding Data, Mode=OneWay}"/>
                                                            <!--HEX显示-->
                                                            <CheckBox Grid.Column="2" Margin="0,0,10,0"
                                                                      VerticalAlignment="Center" Content="HEX"
                                                                      IsChecked="{Binding Hex}">
                                                                <CheckBox.Style>
                                                                    <Style TargetType="CheckBox">
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding IsSentData}" Value="True">
                                                                                <Setter Property="Visibility" Value="Hidden"/>
                                                                            </DataTrigger>
                                                                            <DataTrigger Binding="{Binding IsSentData}" Value="False">
                                                                                <Setter Property="Visibility" Value="Visible"/>
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </CheckBox.Style>
                                                            </CheckBox>
                                                        </Grid>
                                                    </DataTemplate>
                                                </ListBox.ItemTemplate>
                                            </ListBox>
                                            <TabControl Grid.Row="1" Margin="0,5,0,0">
                                                <!--发送字符串页面-->
                                                <TabItem Header="字符串">
                                                    <Expander Margin="10" IsExpanded="True">
                                                        <!--Template使其Header能够拉伸填满位置-->
                                                        <Expander.Template>
                                                            <ControlTemplate TargetType="Expander">
                                                                <Grid>
                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition Height="Auto"/>
                                                                        <RowDefinition Height="*"/>
                                                                    </Grid.RowDefinitions>
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="Auto"/>
                                                                        <ColumnDefinition Width="*"/>
                                                                    </Grid.ColumnDefinitions>
                                                                    <ContentPresenter Grid.Row="0" Grid.Column="1">
                                                                        <ContentPresenter.Style>
                                                                            <Style TargetType="ContentPresenter">
                                                                                <Style.Triggers>
                                                                                    <DataTrigger Binding="{Binding IsExpanded, RelativeSource={RelativeSource AncestorType=Expander}}" Value="False">
                                                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                                                    </DataTrigger>
                                                                                </Style.Triggers>
                                                                            </Style>
                                                                        </ContentPresenter.Style>
                                                                    </ContentPresenter>
                                                                    <ToggleButton Grid.Row="1" Grid.Column="0"
                                                                                  IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource AncestorType=Expander}}">
                                                                        <ToggleButton.Template>
                                                                            <ControlTemplate TargetType="ToggleButton">
                                                                                <Expander VerticalAlignment="Center" ExpandDirection="Up" Style="{x:Null}"
                                                                                          IsExpanded="{Binding IsChecked, RelativeSource={RelativeSource AncestorType=ToggleButton}}"/>
                                                                            </ControlTemplate>
                                                                        </ToggleButton.Template>
                                                                    </ToggleButton>
                                                                    <ContentPresenter Grid.Row="1" Grid.Column="1" Content="{TemplateBinding Header}"/>
                                                                </Grid>
                                                            </ControlTemplate>
                                                        </Expander.Template>
                                                        <Expander.Header>
                                                            <!--输入框和发送按钮-->
                                                            <Grid>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="*"/>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                </Grid.ColumnDefinitions>
                                                                <TextBox Grid.Column="0" AcceptsReturn="True" MaxHeight="100" Padding="0,3"
                                                                         VerticalContentAlignment="Center" VerticalScrollBarVisibility="Auto"
                                                                         IsEnabled="{Binding SendStringCmd.CanExecute}"
                                                                         Text="{Binding StrToSend, UpdateSourceTrigger=PropertyChanged}">
                                                                    <TextBox.InputBindings>
                                                                        <!--发送快捷键-->
                                                                        <KeyBinding Gesture="Ctrl+Enter" Command="{Binding SendStringCmd}"/>
                                                                    </TextBox.InputBindings>
                                                                </TextBox>
                                                                <Button Grid.Column="1" Margin="10,0,0,0">
                                                                    <Button.Style>
                                                                        <Style TargetType="Button" BasedOn="{StaticResource MainWindowDefaultButtonStyle}">
                                                                            <Style.Triggers>
                                                                                <DataTrigger Binding="{Binding LoopSendingMode}" Value="False">
                                                                                    <Setter Property="Content" Value="发送"/>
                                                                                    <Setter Property="Command" Value="{Binding SendStringCmd}"/>
                                                                                    <Setter Property="ToolTip" Value="按Enter键换行，按Ctrl+Enter发送数据"/>
                                                                                </DataTrigger>
                                                                                <DataTrigger Binding="{Binding LoopSendingMode}" Value="True">
                                                                                    <Setter Property="Content" Value="开始"/>
                                                                                    <Setter Property="Command" Value="{Binding StartLoopSendCmd}"/>
                                                                                </DataTrigger>
                                                                                <DataTrigger Binding="{Binding LoopSending}" Value="True">
                                                                                    <Setter Property="Content" Value="结束"/>
                                                                                    <Setter Property="Command" Value="{Binding StopLoopSendCmd}"/>
                                                                                </DataTrigger>
                                                                            </Style.Triggers>
                                                                        </Style>
                                                                    </Button.Style>
                                                                </Button>
                                                            </Grid>
                                                        </Expander.Header>
                                                        <Expander.Content>
                                                            <!--夹层-->
                                                            <StackPanel Margin="0,0,0,5" Orientation="Horizontal">
                                                                <StackPanel.Resources>
                                                                    <Style TargetType="TextBlock">
                                                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                                                    </Style>
                                                                    <Style TargetType="CheckBox">
                                                                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                                    </Style>
                                                                </StackPanel.Resources>
                                                                <StackPanel.Style>
                                                                    <Style TargetType="StackPanel">
                                                                        <Style.Triggers>
                                                                            <!--循环发送时禁止-->
                                                                            <DataTrigger Binding="{Binding LoopSending}" Value="True">
                                                                                <Setter Property="IsEnabled" Value="False"/>
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </StackPanel.Style>
                                                                <CheckBox Content="解析为HEX" Margin="-0.9,0,0,0" IsChecked="{Binding ParseStrToHex}"/>
                                                                <CheckBox Content="循环发送：" Margin="20,0,0,0" IsChecked="{Binding LoopSendingMode}"/>
                                                                <TextBox MinWidth="10" MaxWidth="50" BorderThickness="0"
                                                                         ToolTip="循环发送的间隔时间，范围：1-100000ms"
                                                                         Text="{Binding LoopSendingInterval, UpdateSourceTrigger=PropertyChanged}"
                                                                         HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
                                                                <TextBlock>ms</TextBlock>
                                                            </StackPanel>
                                                        </Expander.Content>
                                                    </Expander>
                                                </TabItem>
                                                <!--发送文件页面-->
                                                <TabItem Header="文件">
                                                    <DockPanel Margin="10">
                                                        <Button DockPanel.Dock="Right"
                                                                Command="{Binding SendFileCmd}">发送</Button>
                                                        <Button DockPanel.Dock="Right" Margin="0,0,10,0"
                                                                Command="{Binding SelectFileCmd}">选择文件</Button>
                                                        <TextBox IsReadOnly="True" VerticalContentAlignment="Center"
                                                                 Margin="0,0,10,0" Text="{Binding FileToSend}"/>
                                                    </DockPanel>
                                                </TabItem>
                                            </TabControl>
                                        </Grid>
                                    </DockPanel>
                                    <!--串口打开时的界面结束-->
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding}" Value="{x:Null}">
                            <Setter Property="Content">
                                <Setter.Value>
                                    <!--串口连接个数为零时界面开始-->
                                    <TextBlock Foreground="LightGray" FontSize="60" Text="串口助手"
                                               VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                    <!--串口连接个数为零时界面结束-->
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </GroupBox.Style>
        </GroupBox>

    </DockPanel>
</Window>
